generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Team {
  tuid            String       @id @default("")
  name            String       @default("")
  protected       Boolean
  handle          String       @default("")
  avatar          String       @default("")
  reviewsRequired String       @default("") @map("reviews_required")
  plan            String       @default("")
  tokenSecret     String       @default("") @map("token_secret")
  tokenKey        String       @default("") @map("token_key")
  inviteCode      String       @default("") @map("invite_code")
  updatedAt       DateTime     @default(now()) @map("updated_at")
  createdAt       DateTime     @default(now()) @map("created_at")
  createdBy       String       @map("created_by")
  members         Membership[]
  tweets          Tweet[]

  @@map("teams")
}

model Membership {
  uid  String @default("")
  tuid String @default("")
  role String @default("member")
  team Team   @relation(fields: [tuid], references: [tuid])
  user User   @relation(fields: [uid], references: [uid])

  @@id([uid, tuid])
  @@map("members")
}

model Tweet {
  twuid            String     @id @default("")
  tuid             String     @default("")
  title            String
  type             String
  text             String
  createdAt        DateTime   @default(now()) @map("created_at")
  createdBy        String     @map("created_by")
  updatedAt        DateTime   @default(now()) @map("updated_at")
  retweets         Int
  replies          Int
  favorites        Int
  metricsUpdatedAt DateTime   @default(now()) @map("metrics_updated_at")
  tweetId          String     @map("tweet_id")
  team             Team       @relation(fields: [tuid], references: [tuid])
  approvals        Approval[]
  comments         Comment[]
  metadata         Metadata

  @@map("tweets")
}

model Approval {
  tauid String
  twuid String
  uid   String
  tweet Tweet  @relation(fields: [twuid], references: [twuid])

  @@id([tauid, twuid])
  @@map("approvals")
}

model Comment {
  tcuid   String   @id
  twuid   String
  addedAt DateTime @default(now()) @map("added_at")
  addedBy String   @map("added_by")
  comment String
  tweets  Tweet    @relation(fields: [twuid], references: [twuid])

  @@map("comments")
}

model Metadata {
  twmuid                      String   @id @default("")
  twuid                       String?
  og_url                      String?
  og_type                     String?
  og_title                    String?
  og_img                      String?
  og_description              String?
  canonical                   String?
  twitter_site_title          String?
  twitter_site_id             String?
  twitter_site                String?
  twitter_player_width        String?
  twitter_player_stream       String?
  twitter_player_height       String?
  twitter_player              String?
  twitter_img_src             String?
  twitter_img_alt             String?
  twitter_img                 String?
  twitter_domain              String?
  twitter_description         String?
  twitter_creator_id          String?
  twitter_creator             String?
  twitter_card                String?
  twitter_app_url_ipad        String?
  twitter_app_id_ipad         String?
  twitter_app_name_ipad       String?
  twitter_app_url_iphone      String?
  twitter_app_id_iphone       String?
  twitter_app_name_iphone     String?
  twitter_app_url_googleplay  String?
  twitter_app_id_googleplay   String?
  twitter_app_name_googleplay String?
  twitter_title               String?
  cardType                    String?
  fallbackImg                 Boolean?
  url                         String?
  tweet                       Tweet?   @relation(fields: [twuid], references: [twuid])

  @@map("metadata")
}

model User {
  uid       String       @id @default("")
  email     String       @unique @default("")
  name      String       @default("")
  picture   String       @default("")
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @default(now()) @map("updated_at")
  members   Membership[]

  @@map("users")
}
