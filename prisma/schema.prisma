generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["connectOrCreate"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model teams {
  tuid            String    @id @default("")
  name            String    @default("")
  protected       Boolean
  handle          String    @unique @default("")
  avatar          String    @default("")
  plan            String    @default("")
  tokenSecret     String    @default("") @map("token_secret")
  tokenKey        String    @default("") @map("token_key")
  inviteCode      String    @default("") @map("invite_code")
  updatedAt       DateTime  @default(now()) @map("updated_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  createdBy       String    @map("created_by")
  reviewsRequired Int       @default(0) @map("reviews_required")
  creator         users     @relation(fields: [createdBy], references: [uid])
  members         members[]
  tweets          tweets[]

  @@index([handle], name: "teams.handle_index")
}

model tweets {
  twuid            String      @id @default("")
  tuid             String?     @default("")
  campaign         String      @default("")
  type             String
  text             String
  createdAt        DateTime    @default(now()) @map("created_at")
  createdBy        String      @map("created_by")
  updatedAt        DateTime    @updatedAt @map("updated_at")
  metricsUpdatedAt DateTime    @default(now()) @map("metrics_updated_at")
  tweetId          String      @map("tweet_id")
  retweets         Int
  replies          Int
  favorites        Int
  url              String?
  creator          users       @relation(fields: [createdBy], references: [uid])
  team             teams?      @relation(fields: [tuid], references: [tuid])
  metadata         metadata?   @relation(fields: [url], references: [url])
  approvals        approvals[]
  comments         comments[]
}

model approvals {
  tauid String
  twuid String
  uid   String
  state String @default("requested")
  tweet tweets @relation(fields: [twuid], references: [twuid])

  @@id([tauid, twuid])
}

model comments {
  tcuid   String   @id
  twuid   String?
  addedAt DateTime @default(now()) @map("added_at")
  comment String
  uid     String
  tweet   tweets?  @relation(fields: [twuid], references: [twuid])
  addedBy users    @relation(fields: [uid], references: [uid])
}

model metadata {
  url                         String   @unique @default("")
  og_url                      String?
  og_type                     String?
  og_title                    String?
  og_img                      String?
  og_description              String?
  canonical                   String?
  twitter_site_title          String?
  twitter_site_id             String?
  twitter_site                String?
  twitter_player_width        String?
  twitter_player_stream       String?
  twitter_player_height       String?
  twitter_player              String?
  twitter_img_src             String?
  twitter_img_alt             String?
  twitter_img                 String?
  twitter_domain              String?
  twitter_description         String?
  twitter_creator_id          String?
  twitter_creator             String?
  twitter_card                String?
  twitter_app_url_ipad        String?
  twitter_app_id_ipad         String?
  twitter_app_name_ipad       String?
  twitter_app_url_iphone      String?
  twitter_app_id_iphone       String?
  twitter_app_name_iphone     String?
  twitter_app_url_googleplay  String?
  twitter_app_id_googleplay   String?
  twitter_app_name_googleplay String?
  twitter_title               String?
  cardType                    String?
  fallbackImg                 Boolean?
  tweets                      tweets[]
}

model users {
  uid       String     @id @default("")
  email     String     @unique @default("")
  name      String     @default("")
  picture   String     @default("")
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  comments  comments[]
  members   members[]
  teams     teams[]
  tweets    tweets[]
}

model members {
  uid   String? @default("")
  tuid  String? @default("")
  role  String  @default("member")
  tmuid String  @id @default("")
  team  teams?  @relation(fields: [tuid], references: [tuid])
  user  users?  @relation(fields: [uid], references: [uid])
}
